#!/usr/bin/env python3
# -*- coding: utf-8 -*-

# This file gives parameters value to complete installation
# NOTE : Python syntax MUST be respected !
#
# IN MOST OF THE CASES YOU SHOULD NOT HAVE TO SET ANY OPTIONS.
# THE SETUP PROCESS WILL DETECT THEM FOR YOU.
# ONLY ADD OPTIONS IF THE AUTOMATIC INSTALLATION FAILED.

#-------------------------------------------------------------------------------
# numpy is required. You may need to set PYTHONPATH before running setup.py
# to make it able to import numpy.

#-------------------------------------------------------------------------------
# Code_Aster toplevel directory (ex: /aster, /opt/aster...)
ASTER_ROOT = '/opt/aster146p'

# astk configuration (for network capabilities)
# Let the setup configure it for you or define the 3 following parameters :
# Example for a stand-alone server (no other remote astk server)
#SERVER_NAME='localhost'
#DOMAIN_NAME='localdomain'
#FULL_SERVER_NAME='%s.%s' % (SERVER_NAME, DOMAIN_NAME)

#-------------------------------------------------------------------------------
#   Compilers
# The setup tries to find automatically your compilers and math libraries.
# You can set PATH and LD_LIBRARY_PATH environment variables before running setup.py
# to add paths in search list.
#
# You may want to select different compilers for products
# Example : PREFER_COMPILER_med = 'GNU'

# Default values are :
#    GNU compiler for all products
PREFER_COMPILER ='GNU_without_MATH'
MATHLIB= '/opt/OpenBLAS/lib/libopenblas.a'

# If you have another compilers you should uncomment following lines:
# (aster, mumps, metis, metis-edf)
# Note the "-" replaced by "_"
#PREFER_COMPILER_aster = 'Intel'
# or
#PREFER_COMPILER_aster = 'Open64'
# or
#PREFER_COMPILER_aster = 'Pathscale'

#PREFER_COMPILER_mumps = PREFER_COMPILER_aster
#PREFER_COMPILER_metis = PREFER_COMPILER_aster


# There are also variants :
#   Intel_without_MATH, GNU_without_MATH, Open64_without_MATH, Pathscale_without_MATH
# but if you choose one of these you MUST set your mathematical libraries
# argument using MATHLIB.
# Example : PREFER_COMPILER='Intel_without_MATH'
#       and MATHLIB = '-L/path_to_acml_libs -lacml'

# You may want to specify the values yourself by defining
# these variables : CC, F90, CXX, LD, DEFINED,
#                   CFLAGS, F90FLAGS, CXXFLAGS, LDFLAGS,
#                   MATHLIB, CXXLIB, OTHERLIB
# (these values will be common to ALL products)


# The script searchs recursively files and libraries from standard paths
# such as /usr/lib and their subdirectories. The depth of recursion is
# limited by MAXDEPTH (default is 5 levels).
# If a file or library is not found in these directories, you may try
# using 'locate' command. Default is not to use locate because it usually
# causes failure with inconsistent versions.
MAXDEPTH = 5
USE_LOCATE = False

#-------------------------------------------------------------------------------
# C and Fortran compilers and linker for Code_Aster
# classical values for GNU compilers
# A value defined here will be used for all compilers.
#CC='/usr/bin/gcc'
#CXX='/usr/bin/g++'
#F90='/usr/bin/gfortran'
#LD=F90
#CFLAGS="-fno-stack-protector"      # for gcc 4.x

#USE_FPIC=False    # default is True

#                          Example for Intel compilers (see the README file)
#CC='/opt/intel/cc/9.1.049/bin/icc'
#CXX='/opt/intel/cc/9.1.049/bin/icpc'
#F90='/opt/intel/fc/9.1.045/bin/ifort'
#LD=F90
#LDFLAGS='-nofor_main'
#F90FLAGS="-fpe0 -traceback"

#OPT_ENV="""
#source /opt/intel/cc/9.1.049/bin/iccvars.sh
#source /opt/intel/fc/9.1.045/bin/ifortvars.sh
#source /opt/intel/mkl/9.0/tools/environment/mklvars32.sh
#"""

#                          Example for gfortran 64 bits :
#F90FLAGS="-fdefault-double-8 -fdefault-integer-8 -fdefault-real-8"

#-------------------------------------------------------------------------------
# You may want to add no standard directories in searched paths (as python list)
# to search respectively for binaries, libraries and include files :
#BINDIR=['/myprefix/bin', ]
#LIBDIR=['/myprefix/lib', ]
#INCLUDEDIR=['/myprefix/include', ]

# To search for shared libraries first
PREFER_SHARED_LIBS=True   # False/True

#-------------------------------------------------------------------------------
# Boost Python installation
#HOME_BOOST = "/usr"
#LIBNAME_BOOST = "boost_python3"
# or common value: "boost_python3-mt"

#-------------------------------------------------------------------------------
# Only if hdf5 was previously installed, uncomment following line
# and fill next one
#_install_hdf5 = False
#HOME_HDF = ''

#-------------------------------------------------------------------------------
# Only if med was previously installed, uncomment following line
# and fill next one
#_install_med = False
#HOME_MED = ''

#-------------------------------------------------------------------------------
# NB : Scotch is installed by default
# Uncomment the following line to not install Scotch libraries
# (under LGPL, available at http://www.labri.fr/perso/pelegrin/scotch/)
#_install_scotch  = False

# If scotch was previously installed, uncomment and fill following line
#HOME_SCOTCH = ''

#-------------------------------------------------------------------------------
# optional packages
# NOTE : optional packages must be installed before Code_Aster to
#   correctly configure and build this one.
#
# NOTE : only a sequential version of Mumps will be built by `setup.py`

# MUMPS libraries (sources available at http://mumps.enseeiht.fr/)
# (Fortran 90 compiler is required to use MUMPS with Code_Aster)
#_install_mumps = False
#HOME_MUMPS=''    # which contains lib/libseq directory
